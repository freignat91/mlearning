syntax = "proto3";

package mlserver;

service MLearningService {
  rpc CreateNetwork (CreateNetworkRequest) returns (EmptyReply);
  rpc Propagate (PropagateRequest) returns (PropagateReply);
  rpc BackPropagate (BackPropagateRequest) returns (EmptyReply);
  rpc Display(DisplayRequest) returns (LinesReply);
  rpc LoadTrainFile(LoadTrainFileRequest) returns (LinesReply);
  rpc Train (TrainRequest) returns (LinesReply);
  rpc TrainSoluce (TrainSoluceRequest) returns (LinesReply);
  rpc Test (TestRequest) returns (LinesReply);
  //
  rpc ServerSelectAnt (ServerSelectAntRequest) returns (EmptyReply);
  rpc ServerLogs(ServerLogsRequest) returns (LinesReply);

}

message CreateNetworkRequest {
  repeated int32 layers = 3;
}

message PropagateRequest {
  repeated double in_values = 1;
}

message PropagateReply {
  repeated double out_values = 1;
}

message BackPropagateRequest {
  repeated double out_values = 1;
}

message TrainRequest {
  string name = 1;
  int32 number = 2;
  bool all = 3;
  bool hide = 4;
  bool create_network = 5;
  bool analyse = 6;
}

message TrainSoluceRequest {
  int32 number = 1;
}

message LoadTrainFileRequest {
  string path = 1;
}

message DisplayRequest {
  bool coef = 1;
}

message TestRequest {
  int32 nest_id = 1;
  int32 ant_id = 2;
}

message EmptyReply{
}

message LinesReply{
  repeated string lines = 1;
}

message ServerLogsRequest{

}

message ServerSelectAntRequest {
  int32 nest_id = 1;
  int32 ant_id = 2;
  string mode = 3;
}
